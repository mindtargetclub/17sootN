{"remainingRequest":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/node_modules/thread-loader/dist/cjs.js!/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/src/components/bkadd4_Mdf.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/src/components/bkadd4_Mdf.vue","mtime":1652842378909},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soo_tN/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}